

<%= render 'tags/choose_tag', all_tags: @all_tags, project_id: @project.id %></td>
<button id="enter_new_note" class="new-note">Add a note</button>
<div class="expand-full-screen"><%= link_to(image_tag("expand_full_screen.png", size: "20x20"), project_notes_path({id: @project, pretty: true})) %></div>
<div class="not-category">NOT Category "<%= @tag.name %>"</div>
<div class="category-name">Category "<%= @tag.name %>"</div>

<div id="table" class="note-table">
	<table 	style="spacing: 0">
		<tr>
			<td style="padding: 0">
				<div id="source" class="divide-table">
					<%= render "notes/arrange_notes_on_table", notes: @notes_without_tag %>
				</div>
			</td>
			<td style="padding: 0">
				<div id="target" class="divide-table">
					<%= render "notes/arrange_notes_on_table", notes: @notes_with_tag %>					
				</div>
			</td>
		</tr>
	</table>
</div>


<%= render 'notes/new_note', note: @note, project_id: @project.id %>


<%
	table_height = 710
	table_width = 1500
	postit_height = 276
	postit_width = 297	
	divide_height = table_height-3
	divide_width = table_width/2-3
	max_top = divide_height-postit_height
	max_left = divide_width-postit_width
%>


<%= form_tag toggle_tag_note_path, remote: true, id: "tag_form", method: :put do %>
	<%= hidden_field_tag "target_note_id" %>
	<%= hidden_field_tag "tag_id", @tag.id %>
<% end %>

<script type="text/javascript">

function setLeftLimit(left) {
  	if (left < 5) {
  		left = 5;
  	}
  	if (left > <%= max_left %>) {
  		left = <%= max_left %>;
  	}
  	return left;
}

function setTopLimit(top) {
  	if (top < 5) {
  		top = 5;
  	}
  	if (top > <%= max_top %>) {
  		top = <%= max_top %>;
  	}
  	return top;
}

function setNewPosition(obj,top,left,of) {
  	left = setLeftLimit(left);
  	top = setTopLimit(top);
  	
  	obj.position({
  		my: "left top",
  		at: 'left+'+left+' top+'+top,
  		of: of
  	});
}

function setNewPositionRight(obj,helper_pos,table_pos) {
	var left = helper_pos.left;
  	var top = helper_pos.top;
	if (helper_pos.left>table_pos.left-10) {
		left = (helper_pos.left-table_pos.left);
	}	
	setNewPosition(obj,top,left,"#target");
}

function setNewPositionLeft(obj,helper_pos,table_pos) {
	var left = helper_pos.left;
  	var top = helper_pos.top;
	if (left < -10) {
		left += table_pos.left;
	}
	setNewPosition(obj,top,left,"#source");
}


$(function() {

  $("#table").css("height", $(".full-table").height()-100);
  $("#source").css("height", $("#table").height());
  $("#target").css("height", $("#table").height());
//  $("#table").css("width", "<%= table_width %>");
  $("#source").css("background", "red");
  $("#target").css("background", "green");

  $(".draggable").draggable({
  	//cursor: "crosshair",
  	revert: "invalid",
  	stack: ".draggable", 
  	helper: "original",
  	scope: ".fromsource .fromtarget",
  	start: function( event, ui ) {
  		containment: "#table"
  	},
  	containment: "#table"
  });
  $(".draggable").each(function() {
  	if ($(this).parent().attr("id")=="source") {
  		$(this).addClass("fromsource");
  	}
  	else {
  		$(this).addClass("fromtarget");
  	}
  });
  
  $("#target").droppable({
  	tolerance: "fit",
  	scope: ".fromsource .fromtarget",
  	helper: "clone",
  	drop: function(event, ui) {
  		var obj = ui.draggable;
  		if (obj.parent().attr("id")!="target") {
	  		obj.removeClass("fromsource");
  			obj.addClass("fromtarget");
  			obj.appendTo("#target");
			setNewPositionRight(obj,ui.helper.position(),$(this).position());
			$("#target_note_id").val(obj.attr("note_id"));
			$("#tag_form").submit();
		}
		else {
			setNewPositionRight(obj,ui.helper.position(),$(this).position());
		}		 
  	}
  });

  $("#source").droppable({
  	tolerance: "fit",
  	scope: ".fromsource .fromtarget",
  	helper: "clone",
  	drop: function(event, ui) {
  		var obj = ui.draggable;
  		if (obj.parent().attr("id")!="source") {
	  		obj.removeClass("fromtarget");
  			obj.addClass("fromsource");
  			obj.appendTo("#source");
			setNewPositionLeft(obj,ui.helper.position(),$("#target").position());
			$("#target_note_id").val(obj.attr("note_id"));
			$("#tag_form").submit();
		}
		else {
			setNewPositionLeft(obj,ui.helper.position(),$(this).position());
		}		 
  	}
  });

/*
$("#source").sortable({
	connectWith: "#target",
	cursor: "move"
	//grid: [ 20, 10 ]
	});
$("#target").sortable({
	connectWith: "#source",
	cursor: "move"
	//grid: [ 20, 10 ]
	});
*/
	var delta = $(".full-table").css("border-left-width");

	$("#table").position(
		{
			my: "center bottom",
			at: "center bottom-"+$(".full-table").css("borderBottomWidth"),
			of: ".full-table",
			collision: "none"

		}
	);

	$("#source").position(
		{
			my: "left bottom",
			at: "left bottom-"+$("#table").css("borderBottomWidth"),
			of: "#table",
			collision: "none"

		}
	);

	$("#target").position(
		{
			my: "right bottom",
			at: "right bottom-"+$("#table").css("borderBottomWidth"),
			of: "#table",
			collision: "none"

		}
	);

	$(".category-name").position(
		{
			my: "center bottom",
			at: "center top",
			of: "#target",
			collision: "none"
		}
	);
	$(".not-category").position(
		{
			my: "center bottom",
			at: "center top",
			of: "#source",
			collision: "none"
		}
	);
	$(".expand-full-screen").position(
		{
			my: "right top",
			at: "right top",
			of: "#source",
			collision: "none"
		}
	);

	$(".divide").position(
		{
			my: "left top",
			at: "left+"+delta+" top+"+delta,
			of: ".full-table",
			collision: "none"
		}
	);

	$(".new-note").position(
		{
			my: "center top",
			at: 'center top+'+delta,
			of: ".full-table",
			collision: "none"
		}
	);	

});

</script>